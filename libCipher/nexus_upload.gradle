apply plugin: 'maven-publish'

def isReleaseBuild() {
    return !POM_VERSION.toUpperCase().contains("SNAPSHOT")
}
def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}
def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}

def getRepositoryUrl() {
    return isReleaseBuild() ? NEXUS_RELEASE_REPOSITORY_URL : NEXUS_SNAPSHOT_REPOSITORY_URL
}
afterEvaluate { project ->
    publishing {
        publications {
            maven(MavenPublication) {
                groupId = POM_GROUPID
                artifactId = POM_ARTIFACTID
                version = POM_VERSION
                artifact isReleaseBuild() ? "build/outputs/aar/libCipher-release.aar" : "build/outputs/aar/libCipher-debug.aar"
                pom.withXml{
                    def dependenciesNode = asNode().appendNode("dependencies")
                    configurations.implementation.allDependencies.forEach(){
                        Dependency dependency ->
                            if (dependency.version != "unspecified" && dependency.name != "unspecified"){
                                def dependencyNode = dependenciesNode.appendNode('dependency')
                                dependencyNode.appendNode('groupId', dependency.group)
                                dependencyNode.appendNode('artifactId', dependency.name)
                                dependencyNode.appendNode('version', dependency.version)
                            }
                    }
                }
            }
        }

        repositories {
            maven {
                credentials {
                    username = getRepositoryUsername()
                    password = getRepositoryPassword()
                }
                url = getRepositoryUrl()
            }
        }
    }
    task androidJavadocs(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
        classifier = 'javadoc'
        from androidJavadocs.destinationDir
    }
    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.sourceFiles
    }

    //解决 JavaDoc 中文注释生成失败的问题
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')
    }
    artifacts {
        archives androidSourcesJar
        archives androidJavadocsJar
    }
}